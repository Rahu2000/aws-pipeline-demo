#!/bin/bash
##############################################
# Set value
##############################################
unset PIPELINE_NAME
unset CROSS_ACCOUNT_PROFILE

POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"
case $key in
    -n|--name)
    INSTACNE_PROFILE_NAME="$2"
    shift # past argument
    shift # past value
    ;;
    -c|--cross-account-profile)
    CROSS_ACCOUNT_PROFILE="$2" # cross account profile
    shift # past argument
    shift # past value
    ;;
    -s|--s3-bucket)
    S3_BUCKET="$2" # cross account profile
    shift # past argument
    shift # past value
    ;;
    -k|--key-alias)
    KEY_ALIAS="$2"
    shift # past argument
    shift # past value
    ;;
    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

if [ -z "$INSTACNE_PROFILE_NAME" ]; then
    echo 'Instance profile name is required.'
    exit 1
fi

if [ -z "$CROSS_ACCOUNT_PROFILE" ]; then
    echo 'Cross account profile is required.'
    exit 1
fi

KMS_KEY_POLICY_NAME="KMSKeyPolicy-$(aws sts get-caller-identity | jq -r '.Account')-$KEY_ALIAS"
S3_BUCKET_POLICY_NAME="S3BucketPolicy-$S3_BUCKET"

HAS_PROFILE="$(aws iam get-instance-profile --profile $CROSS_ACCOUNT_PROFILE --instance-profile-name $INSTACNE_PROFILE_NAME 2> /dev/null | jq -r '.InstanceProfile.InstanceProfileName')"
if [ -n "$HAS_PROFILE" ]; then
    # Profile is exist
    echo $INSTACNE_PROFILE_NAME is already exist
    exit 0
fi

echo 'create EC2 instance profile...'

# KSM key policy
KMS_KEY_POLICY_ARN="$(aws iam list-policies --profile $CROSS_ACCOUNT_PROFILE  --scope Local 2> /dev/null | jq -c --arg policyname $KMS_KEY_POLICY_NAME '.Policies[] | select(.PolicyName == $policyname)' | jq -r '.Arn')"
if [ -z $KMS_KEY_POLICY_ARN ]; then
    KMS_KEY_ALIAS="alias/$KEY_ALIAS"
    KMS_KEY_ID="$(aws kms list-aliases 2> /dev/null | jq -c --arg alias $KMS_KEY_ALIAS '.Aliases[] | select(.AliasName == $alias)' | jq -r '.TargetKeyId')"
    KMS_KEY_ARN="$(aws kms describe-key --key-id $KMS_KEY_ID 2> /dev/null | jq -r '.KeyMetadata.Arn')"
    KMS_KEY_ARN="${KMS_KEY_ARN//\//$REPLACE_STR}"

    # Generate temporory policy file
    KMS_KEY_POLICY_FILE_NAME=KMSServicePolicyforCrossAccount-"$(date '+%Y%m%d%H%M%S')".json
    cat policies/KMSServicePolicyforCrossAccount.json \
        | sed "s/KMS-KEY-ARN/$KMS_KEY_ARN/g" \
        > .config/$KMS_KEY_POLICY_FILE_NAME
    
    # create codepipeline service policy
    KMS_KEY_POLICY_ARN="$(aws iam create-policy --profile $CROSS_ACCOUNT_PROFILE --policy-name $KMS_KEY_POLICY_ARN --path /service-role/ --policy-document file://.config/$KMS_KEY_POLICY_FILE_NAME | jq .Policy.Arn | tr -d \")"
fi 

# S3 bucket policy
S3_BUCKET_POLICY_ARN="$(aws iam list-policies --profile $CROSS_ACCOUNT_PROFILE  --scope Local 2> /dev/null | jq -c --arg policyname $S3_BUCKET_POLICY_NAME '.Policies[] | select(.PolicyName == $policyname)' | jq -r '.Arn')"
if [ -z $S3_BUCKET_POLICY_ARN ]; then
    BUCKET_POLICY_FILE_NAME=S3BucketPolicyforEC2InstanceProfilewithCrossAccount-"$(date '+%Y%m%d%H%M%S')".json
    cat policies/S3BucketPolicyforEC2InstanceProfilewithCrossAccount.json \
        | sed "s/S3-BUCKET/$S3_BUCKET/g" \
        > .config/$BUCKET_POLICY_FILE_NAME
        
    # create codepipeline service policy
    S3_BUCKET_POLICY_ARN="$(aws iam create-policy --profile $CROSS_ACCOUNT_PROFILE  --policy-name $S3_BUCKET_POLICY_NAME --path /service-role/ --policy-document file://.config/$BUCKET_POLICY_FILE_NAME | jq .Policy.Arn | tr -d \")"
fi 

# Create a role
ROLE_ARN="$(aws iam get-role --profile $CROSS_ACCOUNT_PROFILE --role-name $INSTACNE_PROFILE_NAME 2> /dev/null)"
if [ -z $ROLE_ARN ]; then
    # create ec2 role for codedeploy
    aws iam create-role \
        --profile $CROSS_ACCOUNT_PROFILE
        --role-name $INSTACNE_PROFILE_NAME \
        --path /service-role/ \
        --assume-role-policy-document file://policies/TrustPolicyforEC2.json

    # attach policies
    aws iam attach-role-policy \
        --profile $CROSS_ACCOUNT_PROFILE
        --policy-arn $KMS_KEY_POLICY_ARN \
        --role-name $INSTACNE_PROFILE_NAME 
        
    aws iam attach-role-policy \
        --profile $CROSS_ACCOUNT_PROFILE
        --policy-arn $S3_BUCKET_POLICY_ARN \
        --role-name $INSTACNE_PROFILE_NAME
fi

# Create the instance profile required by EC2 to contain the role
aws iam create-instance-profile \
    --profile $CROSS_ACCOUNT_PROFILE
    --instance-profile-name $INSTACNE_PROFILE_NAME

# Finally, add the role to the instance profile
aws iam add-role-to-instance-profile \
    --profile $CROSS_ACCOUNT_PROFILE \
    --instance-profile-name $INSTACNE_PROFILE_NAME \
    --role-name $INSTACNE_PROFILE_NAME
sleep 10

exit 0