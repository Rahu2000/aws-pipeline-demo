#!/bin/bash

##############################################
# Set value
##############################################
unset PIPELINE_NAME
unset CROSS_ACCOUNT_PROFILE

POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"
case $key in
    -n|--name)
    PIPELINE_NAME="$2"
    shift # past argument
    shift # past value
    ;;
    -c|--cross-account-profile)
    CROSS_ACCOUNT_PROFILE="$2" # cross account profile
    shift # past argument
    shift # past value
    ;;
    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

echo 'creation of a customer key is start...'
##############################################
# Arguments validation
##############################################
if [ -z "$PIPELINE_NAME" ]; then
    echo 'Pipeline name is required.'
    echo 'Usage: create_custom_key_cross_account -n PIPELINE_NAME -c CROSS_ACCOUNT_PROFILE'
    exit 9
fi

if [ -z "$CROSS_ACCOUNT_PROFILE" ]; then
    echo 'Cross account profile is required.'
    echo 'Usage: create_custom_key_cross_account -n PIPELINE_NAME -c CROSS_ACCOUNT_PROFILE'
    exit 9
fi

##############################################
# Parmeters validation
##############################################
ADMIN_ACCOUNT_ARN="$(aws sts get-caller-identity | jq -r '.Arn')"
ADMIN_ACCOUNT_ID="$(echo $ADMIN_ACCOUNT_ARN | cut -d ':' -f 5)"
ADMIN_USER_ID="$(echo $ADMIN_ACCOUNT_ARN | cut -d '/' -f 2)"
CROSS_ACCOUNT_ID="$(aws sts get-caller-identity --profile $CROSS_ACCOUNT_PROFILE | jq -r '.Account')"

if [ -z $ADMIN_ACCOUNT_ID ]; then
    echo The default aws account is not valid.
    exit 9
fi

if [ -z $CROSS_ACCOUNT_ID ]; then
    echo $CROSS_ACCOUNT_PROFILE is not valid profile.
    exit 9
fi

##############################################
# Get informations for Key generation
##############################################
REGION="$(aws configure get region)"

##############################################
# Create customer KMS key
##############################################
KMS_KEY_ALIAS=alias/CrossAccountKeyfor-"$REGION"-"$PIPELINE_NAME"
# Check exist customer KMS key
KMS_KEY_ID="$(aws kms list-aliases 2> /dev/null | jq -c --arg alias $KMS_KEY_ALIAS '.Aliases[] | select(.AliasName == $alias)' | jq -r '.TargetKeyId')"
if [ -n "$KMS_KEY_ID" ]; then
    echo "$KMS_KEY_ALIAS KMS key is already exist."
    exit 0
fi

KEY_ID="$(aws kms create-key --key-usage 'ENCRYPT_DECRYPT' --origin 'AWS_KMS' --description 'A Key for cross account pipeline' --tags "TagKey=Name,TagValue=$PIPELINE_NAME" "TagKey=TargetAccount,TagValue=$CROSS_ACCOUNT_ID" 2> /dev/null | jq -r '.KeyMetadata.KeyId')"
if [ -z "$KEY_ID" ]; then
    echo Key generation failed.
    exit 9
fi
##############################################
# Create alias to KMS key
##############################################
aws kms create-alias \
--alias-name alias/CrossAccountKeyfor-"$REGION"-"$PIPELINE_NAME" \
--target-key-id $KEY_ID

exit 0