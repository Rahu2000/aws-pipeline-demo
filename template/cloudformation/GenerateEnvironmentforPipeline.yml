AWSTemplateFormatVersion: "2010-09-09"
Description: Environment creation sample template for pipeline on AWS
Parameters:
  CodeDeployRoleName:
    Description: CodeDeploy service role name
    Type: String
    Default: CodeDeployServiceRole
  CodePipelineRoleName:
    Description: CodePipeline service role name
    Type: String
    Default: CodePipelineServiceRole
Resources:
  CodePipelineArtifactStoreBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Join
      - ''
      - - 'codepipeline-'
        - !Ref 'AWS::Region'
        - '-'
        - !Select
          - 4
          - !Split
            - '-'
            - !Select
              - 2
              - !Split
                - '/'
                - !Ref 'AWS::StackId'
  CodePipelineArtifactStoreBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref CodePipelineArtifactStoreBucket
      PolicyDocument:
        Version: 2012-10-17
        Id: SSEAndSSLPolicy
        Statement:
        - Sid: DenyUnEncryptedObjectUploads
          Effect: Deny
          Principal: '*'
          Action: 's3:PutObject'
          Resource: !Join 
          - ''
          - - !GetAtt 
              - CodePipelineArtifactStoreBucket
              - Arn
            - /*
          Condition:
            StringNotEquals:
              's3:x-amz-server-side-encryption': 'aws:kms'
        - Sid: DenyInsecureConnections
          Effect: Deny
          Principal: '*'
          Action: 's3:*'
          Resource: !Join 
          - ''
          - - !GetAtt 
              - CodePipelineArtifactStoreBucket
              - Arn
            - /*
          Condition:
            Bool:
              'aws:SecureTransport': false
  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref CodeDeployRoleName
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codedeploy.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      ManagedPolicyArns: 
      - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole
  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Ref CodePipelineRoleName
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Action: 'sts:AssumeRole'
      Path: /
      Policies:
      - PolicyName: AWSCodePipelineServicePolicy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - 'codecommit:CancelUploadArchive'
            - 'codecommit:GetBranch'
            - 'codecommit:GetCommit'
            - 'codecommit:GetUploadArchiveStatus'
            - 'codecommit:UploadArchive'
            Resource: '*'
          - Effect: Allow
            Action:
            - 'codedeploy:CreateDeployment'
            - 'codedeploy:GetApplication'
            - 'codedeploy:GetApplicationRevision'
            - 'codedeploy:GetDeployment'
            - 'codedeploy:GetDeploymentConfig'
            - 'codedeploy:RegisterApplicationRevision'
            Resource: '*'
          - Effect: Allow
            Action:
            - 'codebuild:BatchGetBuilds'
            - 'codebuild:StartBuild'
            Resource: '*'
          - Effect: Allow
            Action:
            - 'devicefarm:ListProjects'
            - 'devicefarm:ListDevicePools'
            - 'devicefarm:GetRun'
            - 'devicefarm:GetUpload'
            - 'devicefarm:CreateUpload'
            - 'devicefarm:ScheduleRun'
            Resource: '*'
          - Effect: Allow
            Action:
            - 'lambda:InvokeFunction'
            - 'lambda:ListFunctions'
            Resource: '*'
          - Effect: Allow
            Action:
            - 'iam:PassRole'
            Resource: '*'
            Condition:
              StringEqualsIfExists:
                'iam:PassedToService':
                - cloudformation.amazonaws.com
                - elasticbeanstalk.amazonaws.com
                - ec2.amazonaws.com
                - ecs-tasks.amazonaws.com
          - Effect: Allow
            Action:
            - 'elasticbeanstalk:*'
            - 'ec2:*'
            - 'elasticloadbalancing:*'
            - 'autoscaling:*'
            - 'cloudwatch:*'
            - 's3:*'
            - 'sns:*'
            - 'cloudformation:*'
            - 'rds:*'
            - 'sqs:*'
            - 'ecs:*'
            Resource: '*'
          - Effect: Allow
            Action:
            - 'cloudformation:CreateStack'
            - 'cloudformation:DeleteStack'
            - 'cloudformation:DescribeStacks'
            - 'cloudformation:UpdateStack'
            - 'cloudformation:CreateChangeSet'
            - 'cloudformation:DeleteChangeSet'
            - 'cloudformation:DescribeChangeSet'
            - 'cloudformation:ExecuteChangeSet'
            - 'cloudformation:SetStackPolicy'
            - 'cloudformation:ValidateTemplate'
            Resource: '*'
          - Effect: Allow
            Action:
            - 'ecr:DescribeImages'
            Resource: '*'
          - Effect: Allow
            Action:
            - 'servicecatalog:ListProvisioningArtifacts'
            - 'servicecatalog:CreateProvisioningArtifact'
            - 'servicecatalog:DescribeProvisioningArtifact'
            - 'servicecatalog:DeleteProvisioningArtifact'
            - 'servicecatalog:UpdateProduct'
            Resource: '*'
Outputs:
  CodeDeployRoleArn:
    Description: CodeDeploy service role arn
    Value: !GetAtt CodeDeployServiceRole.Arn
    Export:
      Name: !Join
      - ''
      - - !Ref 'AWS::StackName'
        - ':'
        - 'CodeDeployRoleArn'
  CodePipelineRoleArn:
    Description: CodePipeline service role arn
    Value: !GetAtt CodePipelineServiceRole.Arn
    Export:
      Name: !Join
      - ''
      - - !Ref 'AWS::StackName'
        - ':'
        - 'CodePipelineRoleArn'
  BucketName:
    Description: Bucket name for CodePipeline artifact store 
    Value: !Ref CodePipelineArtifactStoreBucket
    Export:
      Name: !Join
      - ''
      - - !Ref 'AWS::StackName'
        - ':'
        - 'BucketName'
